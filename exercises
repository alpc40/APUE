第一章 基础知识
	1－3  实现ls(1)简单功能，即能列出一个目录下的所有文件（P4）
	1－4  使用不带缓冲IO，实现输入即输出功能，中间自设BUFFER （P7）
	1－5  使用标准IO，实现1－4功能（P8）
	1－6  打印当前进程ID和PID（P9）
	1－7  从标准输入读命令并执行，使用子进程实现（P9）
	1－8  打印出错信息（P12）
	1－9  打印用户ID和组ID（P14）
	1－10  使用1－7代码，实现对中断信号的响应，并打印出信号（P15）  
第三章 文件I/O
	3－1  测试标准输入能否被设置偏移量（P54）
	3－2  创建一个有空洞的文件，并写入数据（P55）创建时分别用open\openat\creat
	3－4  使用read/write将标准输入复制到标准输出（P58）
	+3－4  实现shell的cp和cat函数（极客学院）
	+3－5  试用父子进程分别对一个文件的第3－18字节进行read()和write(),然后用pread()和pwrite()进行同样的操作
	+3－6  试用父子进程分别执行creat()和open()操作，在非原子操作open()会出现什么问题？
	+3－7  试分别用dup()和dup2()复制STDOUT_FILENO，并打印其复制后的文件描述符。
	3－11  测试并打印一个文件的MODE（文件状态）（P67）
	3－12  给定一个文件描述符，开启其要求的文件状态标志（P68）
第四章 文件和目录
	+4－1  1分钟内，讲出7种文件类型，并列出7种判断文件类型的宏（P75）
	4－3  对每个命令行参数的文件类型进行判定并打印（P76）
	4－4  分别使用access()和faccessat()测试实际用户对某文件是否具有读和写权限,对软链接文件进行操作（P82）
	4－9  创建屏蔽字，分析屏蔽字对创建新文件的影响（P83）
	4－12  对4－9创建的文件设置粘着位和设置用户ID位（P86）
	+4－12  试论述st_size\st_blksize\st_blkcnt的区别，他们有怎么的对应关系（P89）
	+4－13  试将文件截断成20字节（P90）
	4－16  打开一个文件，然后unlink它，睡眠15秒，测试这15秒内内存的变化（P95）
	+4－16  重新命名一个文件（P96）
	+4－18  试读取符号链接里的内容，与符号链接实际链接过后的内容与什么区别（P99）
	4－21  列出一个文件的三个时间，打开它并截断为0，然后再列出三个时间，将时间改回来，哪个时间改不了？
	4－22*  列出系统里，7种文件所占有的比例（P105）
	+4－23*  给出目录名字，从系统里找到，然后将其改名
	4－24  试写一个类似cp的程序，使空洞文件复制时，不改变块大小
第五章  标准I/O
	5－1  简述缓冲三种类型的区别（P116）
	5－2  用两种方法实现从标准输入复制到标准输出（P123）
	5－11  查看3种标准输出的buffer大小，然后打开一个文件，测试其buffer大小（P131）
		注意：涉及到各种平台对FILE的定义
	5－12  生成一个临时文件名，并打印出来，生成一个临时文件，向其写数据，然后打印出来（P135）
	5－13  试用mkstemp创建临时文件，分析当文件名分别用数组和指针的区别（P136）
第六章  系统数据文件和信息
	6－2  用两种方法找到本用户信息，并将信息打印出来。
	6－11  用三种方法获得本地时间并打印出来（P153）。
第七章  进程环境
	7－3  登记二个函数，看看其退出的顺序（P161）
	7－4  查看环境变量的“PATH”和“USR”字段，如何放置和清除某一字段环境变量（168）
	7－11  实现函数之外的程序跳转（170）
第八章  进程控制
	8－1  创建一个子进程，子进程对变量进行改变，分别打印父子进程的变量，分析标准IO在与终端和文件打交道时的缓冲问题
	8－2  使用vfork修改8－1，分析其与 fork的区别
	8－6  分别使用在abort()/除0/exit()在子进程中，父进程捕获子进程退出状态，并打印出来（P191）
	*8－7 试述waitpid相对wait的特点
	8－8  写一个防止僵死进程的程序，打印其PID和PPID（P194）
